$duration-selected-reverse-last: 1.5s;
$duration-selected-reverse: 2.5s;
$duration-selected: 2s;
$duration-selected-last: 2s;

:export {
	//https://til.hashrocket.com/posts/sxbrscjuqu-share-scss-variables-with-javascript
	durationSelectedReverseLast: $duration-selected-reverse-last;
	durationSelectedReverse: $duration-selected-reverse;
	durationSelectedLast: $duration-selected-last;
	durationSelected: $duration-selected;
}
//$hover-transform: translateX(calc(#{$contact-space-const} * -1/10));
.hover {
	//&.big-viewport, &.big-viewport.reverse.contact {
	&.big-viewport:not(.reverse) {
		transition: all 0.5s ease-out;
		transform: translateX(calc(#{$contact-space-const} * -1/10));
	}

	svg.icon {
		opacity: 0.6 !important;
		color: $vibrant-blue !important;
	}
}
.contact {
	background-color: darken(white, 0.09);
	box-shadow: -10px 10px 2rem -0.5rem transparentize(black, 0.8);
	border-radius: 1rem;
	box-sizing: border-box;

	padding: 1rem $contact-horizontal-padding;
	color: black;
	display: flex;
	flex-direction: row;
	align-items: center;
	height: $contact-height;

	transition: all 1.5s ease-out;
	justify-content: space-between;
	flex-basis: 80%;
	animation: none;

	//&#phone {
	//	.info-container {
	//		.info {
	//			@media screen and (pointer: fine) {
	//				cursor: default;
	//				color: inherit;
	//			}
	//		}
	//	}
	//}

	br {
		display: none;
	}
	//@media
	&.big-viewport {
		left: $contact-space;
		position: absolute;
		top: 0;
		width: $contact-width;
	}
	//@media
	&.small-viewport {
		margin-bottom: 2rem;
		padding-left: 1rem;
		padding-right: 1rem;

		br {
			display: block !important;
		}
	}
	svg.fa-times {
		color: darken($vibrant-blue, 20%) !important;
		$size: 0.7rem;
		font-size: $size;
		height: $size;
		cursor: pointer;
		opacity: 1;
		position: absolute;
		top: 1rem;
		right: 1rem;
		transition: opacity 1s ease-in-out;
		pointer-events: all;
		z-index: 9;
		&:not(.visible) {
			opacity: 0;
			pointer-events: none;
		}
	}

	svg.icon {
		color: black;
		opacity: 0.4;
		font-size: $contact-font-size;
		height: 80%;
		margin-right: $contact-horizontal-padding;
		transition: opacity 1s ease-in-out, color 2s ease-in;
	}
	.info-container {
		.subtitle {
			font-weight: 400;
			@media #{$mq-phone} {
				font-size: 0.8rem;
			}
		}
		.info {
			font-weight: 500;
			@media #{$mq-phone} {
				font-size: 0.9rem;
			}
		}
		a.info {
			text-decoration: none;
			color: $vibrant-blue;
			transition: color 0.5s ease-in;
			&:hover {
				color: darken($vibrant-blue, 10%);
			}
		}
	}
	div.copy {
		margin-left: auto;
		margin-right: 5%;
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		svg.fa-copy {
			font-size: 1.3rem;
			opacity: 0.3;
			cursor: pointer;

			transition: transform 0.6s ease-in, color 0.7s ease-in;
			&:active {
				transition: transform 0.1s ease-out, color 0.5s ease-in;
				// font-size: 1.7rem;
				transform: scale(1.07);
			}
			&:hover {
				@media (hover: hover) {
					// Disable hover on touch screens,
					// because it gets applied sometimes for no reason there.
					color: darken($muted-blue,10%);
				}
			}
			&.copy-in-progress {
				@media screen and (pointer: coarse) {
					// Only on touch screens
					color: darken($muted-blue,10%);
				}
			}
		}
		span#copy-text {
			margin-top: 1vh;
			font-size: 0.5rem;
			font-weight: 400;
			opacity: 0.4;
		}
		@media screen and (pointer: coarse) {
			// Only on touch screens
			span#copy-text {
				display: block;
			}
		}
	}
	@keyframes selected {
		0% {
			z-index: inherit;
			transform: translateX(0);
		}
		50% {
			transform: translateX($contact-move);
			z-index: inherit;
		}
		51% {
			transform: translateX($contact-move);
			z-index: 10;
		}
		100% {
			z-index: 10;
			transform: translateX($contact-middle);
		}
	}
	@keyframes selected-reverse {
		0% {
			z-index: 10;
			transform: translateX($contact-middle);
		}
		30% {
			transform: translateX($contact-move);
			z-index: 10;
		}
		31% {
			transform: translateX($contact-move);
			z-index: inherit;
		}
		100% {
			z-index: inherit;
			transform: translateX(0);
		}
	}
	@keyframes selected-last {
		0% {
			transform: translateX(0);
			z-index: inherit;
		}
		50% {
			z-index: inherit;
		}
		51% {
			z-index: 10;
		}
		100% {
			z-index: 10;
			transform: translateX($contact-middle);
		}
	}
	@keyframes selected-last-reverse {
		0% {
			z-index: 10;
			transform: translateX($contact-middle);
		}
		50% {
			z-index: 10;
		}
		51% {
			z-index: inherit;
		}
		100% {
			z-index: inherit;
			transform: translateX(0);
		}
	}
	@keyframes selected-last-reverse-hover {
		0% {
			z-index: 10;
			transform: translateX($contact-middle);
		}
		50% {
			z-index: 10;
		}
		51% {
			z-index: inherit;
		}
		100% {
			z-index: inherit;
			transform: translateX(calc(#{$contact-space-const} * -1/10));
		}
	}
	&:not(.selected) {
		cursor: pointer;
	}
	&.last {
		transition: all 1s ease-out;
	}
	&.selected {
		will-change: transform;
		svg.icon {
			opacity: 0.6;
			transition: color 0.25s ease-in-out;
			color: $vibrant-blue;
		}
		&:not(.last) {
			animation: selected;
			animation-duration: $duration-selected;
			animation-fill-mode: forwards;
		}
		&.last {
			animation: selected-last;
			animation-duration: $duration-selected-last;
			animation-fill-mode: forwards;
		}
	}
	&.reverse {
		will-change: transform;
		&:not(.last) {
			animation: selected-reverse;
			animation-duration: $duration-selected-reverse;
			animation-fill-mode: forwards;
		}
		&.last:not(.hover) {
			animation: selected-last-reverse;
			animation-duration: $duration-selected-reverse-last;
			animation-fill-mode: forwards;
		}
		&.last.hover {
			animation: selected-last-reverse-hover;
			animation-duration: $duration-selected-reverse-last;
			animation-fill-mode: forwards;
		}
	}
}
